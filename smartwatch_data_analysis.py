# -*- coding: utf-8 -*-
"""Smartwatch Data Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EnGVIVWh653p5-yODiNWOVf8dwjtXQ4A

# **Introduction**
This case study is done by Jan Rehman

# **About dataset**
1. The data is publicly available on Kaggle: FitBit Fitness Tracker Data and stored in 18 csv files.
2. Generated by respondents from a distributed survey via Amazon Mechanical Turk between 12 March 2016 to 12 May 2016.
3. 30 FitBit users who consented to the submission of personal tracker data.
4. Data collected includes (1) physical activity recorded in minutes, (2) heart rate, (3) sleep monitoring, (4) daily activity and (5) steps.

## Limitations of the dataset:

1. Data collected from year 2016. Users' daily activity, fitness and sleeping habits, diet and food consumption may have changed since then, hence data may not be timely or relevant.
2. Sample size of 30 female FitBit users is not representative of the entire female population.
3. As data is collected in a survey, hence unable to ascertain the integrity or accuracy of data.

## Background
Bellabeat is a high-tech manufacturer of beautifully-designed health-focused smart products for women since 2013. Inspiring and empowering women with knowledge about their own health and habits, Bellabeat has grown rapidly and quickly positioned itself as a tech-driven wellness company for females.

The co-founder and Chief Creative Officer, Urška Sršen is confident that an analysis of non-Bellebeat consumer data (ie. FitBit fitness tracker usage data) would reveal more opportunities for growth.

## Business task
*Analyze FitBit Fitness Tracker Data to gain insights into how consumers are using the FitBit app and discover trends and insights for Bellabeat marketing strategy.*
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.express as px
import plotly.graph_objects as go

data = pd.read_csv('https://raw.githubusercontent.com/amankharwal/Website-data/master/dailyActivity_merged.csv')
data.head()

"""### Lets understand the data we are working with. 
* I want to check if this dataset has any null values or not. 
* Number of rows and columns
* Name of columns
* Dtypes
* Information about the columns
* Descriptive statistics of the dataset
* Counting the unique ID and to confirm whether data set has 30 IDs.
"""

data.isnull().sum()

data.info()

# count distinct value of "Id"
unique = data['Id'].nunique()
unique

"""**From the above observation, noted that**

1. There is no typo, Null or missing values.

2. Data frame has 940 rows and 15 columns.

3. ActivityDate is wrongly classified as object dtype and has to be converted to datetime64 dtype.

4. There are 33 unique IDs, instead of 30 unique IDs as expected from 30 fitness tracker users.

**The following data manipulation will be perfomed:**
1. Convert ActivityDate to datatime64 dtype, it is currently object. 
2. Convert the format to mm-dd-yyyy.
3. Create a new column 'Day'
4. Create a new column TotalMinutes

The column containing date is an object. I want to convert it to dates, so I can use it my analysis.
"""

# Changing datadate of ActivityDate
data['ActivityDate'] = pd.to_datetime(data['ActivityDate'], format = "%m/%d/%Y")
data.dtypes

"""There is information about activity times based on 4 categories:
          
* Very Active Minutes                    
* Fairly Active Minutes                  
* Lightly Active Minutes                 
* Sedentary Minutes                     

I will combine all these columns as total minutes before moving.
"""

# Combining 4 categories to total times into the dataset
data["TotalMinutes"] = data["VeryActiveMinutes"] + data["FairlyActiveMinutes"] + data["LightlyActiveMinutes"] + data["SedentaryMinutes"]
data["TotalMinutes"].sample(5)

# Creating a new column TotalHours by converting to hour and round float to two decimal places
data["TotalHours"] = round(data["TotalMinutes"] / 60)

data.describe()

"""**Interpreting statistical findings:**
* On average, users logged 7,637 steps or 5.4km
* Sedentary users are the majority logging on average 991 minutes or 20 hours making up 81% of total average minutes.
* Noting that average calories burned is 2,303 calories

## I will dive more into the dataset now, and try to understand relationship by illustrating illustrations. 

The dataset has a “Calories” column. It contains the data about the number of calories burned in a day. Let’s have a look at the relationship between calories burned and the total steps walked in a day
"""

# Displaying all the columns, so I can easier copy columns names into my code. It saves time. I can use data.columns, but Im going to use data.dtypes, its simpler to read.
data.columns
data.dtypes

# Relationship between calories and total steps
figure = px.scatter(data_frame = data, x='Calories', y='TotalSteps', trendline='ols', title='Relationship between Calories and Total Steps')
figure.show()

"""1. It is a positive correlation.

2. We observed that intensity of calories burned increase when users are at the range of > 0 to 15,000 steps. 

3. Noted a few outliers:
* Zero steps with zero to minimal calories burned.
* 1 observation of > 35,000 steps with < 3,000 calories burned.
* Deduced that outliers could be due to natural variation of data, change in user's usage or errors in data collection (ie. miscalculations, data contamination or human error
"""

# Lets explore average number of total number of active minutes in a day for the 4 categories:
label = ["Very Active Minutes", "Fairly Active Minutes", 
         "Lightly Active Minutes", "Inactive Minutes"]

counts = data[["VeryActiveMinutes", "FairlyActiveMinutes", 
               "LightlyActiveMinutes", "SedentaryMinutes"]].mean()

colors = ['yellow','lightgreen', "pink", "lightblue"]

fig = go.Figure(data=[go.Pie(labels=label, values=counts)])
fig.update_layout(title_text='Total Active Minutes')
fig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=15,
                  marker=dict(colors=colors, line=dict(color='black', width=3)))
fig.show()

"""By using *import plotly.graph_objects as go*, I get interactive charts. By hovering over the piechart. I can observe the following insights:
1. 81.3% of Total inactive minutes in a day
2. 15.8% of Lightly active minutes in a day
3. On an average, only 21 minutes (1.74%) were very active
4. Lastly, 1.11% (13 minutes) of fairly active minutes in a day

"""

# Lets see which day the persons in this dataset were most active. Starting by adding a new column 'Day', from ActivityDate.
data["Day"] = data["ActivityDate"].dt.day_name()
data["Day"].head()

"""###  Now let’s have a look at the very active, fairly active, and lightly active minutes on each day of the week:"""

fig = go.Figure()
fig.add_trace(go.Bar(
    x=data["Day"],
    y=data["VeryActiveMinutes"],
    name='Very Active',
    marker_color='purple'
))
fig.add_trace(go.Bar(
    x=data["Day"],
    y=data["FairlyActiveMinutes"],
    name='Fairly Active',
    marker_color='green'
))
fig.add_trace(go.Bar(
    x=data["Day"],
    y=data["LightlyActiveMinutes"],
    name='Lightly Active',
    marker_color='pink'
))
fig.update_layout(barmode='group', xaxis_tickangle=-45)
fig.show()

"""### Now let’s have a look at the number of inactive minutes on each day of the week:"""

day = data["Day"].value_counts()
label = day.index
counts = data["SedentaryMinutes"]
colors = ['gold','lightgreen', "pink", "blue", "skyblue", "cyan", "orange"]

fig = go.Figure(data=[go.Pie(labels=label, values=counts)])
fig.update_layout(title_text='Inactive Minutes Daily')
fig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=30,
                  marker=dict(colors=colors, line=dict(color='black', width=3)))
fig.show()

"""So Thursday is the most inactive day according to the lifestyle of all the individuals in the dataset.

### Now let’s have a look at the number of calories burned on each day of the week:
"""

calories = data["Day"].value_counts()
label = calories.index
counts = data["Calories"]
colors = ['gold','lightgreen', "pink", "blue", "skyblue", "cyan", "orange"]

fig = go.Figure(data=[go.Pie(labels=label, values=counts)])
fig.update_layout(title_text='Calories Burned Daily')
fig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=30,
                  marker=dict(colors=colors, line=dict(color='black', width=3)))
fig.show()

"""Tuesday is, therefore, one of the most active days for all individuals in the dataset, as the highest number of calories were burned on Tuesdays.

# Summary
1. **What are the trends identified?**

* Majority of users (81.3%) are using the FitBit app to track sedentary activities and not using it for tracking their health habits.

* Users prefer to track their activities during weekdays as compared to weekends - perhaps because they spend more time outside on weekdays and stay in on weekends.

2. How could these trends help influence Bellabeat marketing strategy?

* Bellabeat marketing team can encourage users by educating and equipping them with knowledge about fitness benefits, suggest different types of exercise (ie. simple 10 minutes exercise on weekday and a more intense exercise on weekends) and calories intake and burnt rate information on the Bellabeat app.

* On weekends, Bellabeat app can also prompt notification to encourage users to exercise.
"""

